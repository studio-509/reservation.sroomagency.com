<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Clientsadmin extends MY_Controller{	function __construct()	{		parent::__construct();		/**		* Si user non connecté ou user != administrateur et tentative d'accès au module d'admin		* On redirige vers la page de connexion		**/		if(!$this->session->userdata('id_admin') && $this->uri->segment(2) != "connexion")		die();		$this->load->model('ClientsModel');		$this->load->libraries(['form_validation','pagination']);		$this->load->helper('my_pagination');		/**		* css du module		**/		$this->data['module_css'] = load_module_css($this->data['module_css'], 'clients');		/**		* js du module		**/		$this->data['module_js'] = load_module_js($this->data['module_js'],'clients');	}	public function listing($offset = 0, $pag = PAGINATION)	{		// DEBUG		// $this->output->enable_profiler(TRUE);		// Verif existence pagination définie dans les valeurs de session		if($this->session->has_userdata('pag_c'))		{			$pag = $this->session->pag_c;		}		// Récupération des data Post (Ajax Reload)		$post = $this->input->post('datas');		$data = [];		if( ! empty($post))		{			foreach ($post as $k => $v)			{				$data[$k] = $v;			}		}		// Vérif presence d'une valeur de pagination		if( ! empty($data['pag']))		{			$pag = $data['pag'];			$this->session->pag_c = $pag;		}		$offset = $this->uri->segment(3,0);		// TODO determination de l'offset en fonction de la pagination		// Initialisation variables		$limit = [$pag,$offset];		$this->data['nbRes'] = $this->ClientsModel->getNbData('client');		// configuration pagination		$config['base_url'] = 'http://dev.secretroomagency.com/admin/clients';		$config['total_rows'] = $this->data['nbRes'];		$config['per_page'] = $pag;		$config['full_tag_open'] = '<div class="text-center"><ul class="pagination">';		$config['full_tag_close'] = '</ul></div><!--pagination-->';		$config['first_link'] = '&laquo; Premier';		$config['first_tag_open'] = '<li class="Page prec.">';		$config['first_tag_close'] = '</li>';		$config['last_link'] = 'Dernier &raquo;';		$config['last_tag_open'] = '<li class="Page suiv.">';		$config['last_tag_close'] = '</li>';		$config['next_link'] = 'Suivant &rarr;';		$config['next_tag_open'] = '<li class="Page prec.">';		$config['next_tag_close'] = '</li>';		$config['prev_link'] = '&larr; Précédent';		$config['prev_tag_open'] = '<li class="Page suiv.">';		$config['prev_tag_close'] = '</li>';		$config['cur_tag_open'] = '<li class="active"><a href="">';		$config['cur_tag_close'] = '</a></li>';		$config['num_tag_open'] = '<li class="page">';		$config['num_tag_close'] = '</li>';		$config['anchor_class'] = 'follow_link';		// Initialisation pagination		$this->pagination->initialize($config);		$this->data['pagination'] = $this->pagination->create_links();		$this->data['pag'] = $pag;		$this->data['clients'] = $this->ClientsModel->getList('client','','*','',$limit);		if($this->input->is_ajax_request())		{			$vue = $this->load->view('/admin/listing', $this->data);			echo $vue;		}		else		{			$vue = $this->load->view('/admin/listing', $this->data, TRUE);			return $vue;		}	}	public function delete()	{		$post = $this->input->post('datas');		$data = [];		foreach($post as $k=>$v)		{			$data[$k] = $v;		}		$this->ClientsModel->deleteData('client', array('id' => $data['id']));		$datas = array(			'rPop' => $data['txt'],			'rPopTitle' => $data['titre'],			'rPopClass' => (isset($data['class']))?$data['class']:''		);		echo json_encode($datas);	}	public function infos()	{		$post = $this->input->post('datas');		$data = array();		foreach($post as $k=>$v)		$data[$k] = $v;		$data['client'] = $this->ClientsModel->getData('client', array('id' => $data['id']));		$vue = $this->load->view('/admin/form', $data, true);		$datas = array(			'rPop' => $vue,			'rPopTitle' => $data['titre'],			'rPopClass' => (isset($data['class']))?$data['class']:''		);		echo json_encode($datas);	}	public function update()	{		$post = $this->input->post('datas');		$data = array();		foreach($post as $k=>$v)		$data[$k] = $v;		$datas = array(			'nom' => $data['nom'],			'prenom' => $data['prenom'],			'email' => $data['email'],			'tel' => $data['tel'],			'login' => $data['login']		);		if($data['password'] != '' && md5($data['password']) != $data['old_pass'])		$datas['password'] = md5($data['password']);		if($this->ClientsModel->updateData('client', $datas, array('id' => $data['id'])))		{			$txt = 'Mise à jour effectuée avec succès';			$class = 'success';		}		else		{			$txt = 'Erreur lors de la mise à jour';			$class = 'alerte';		}		$vue = $this->load->view('/admin/form', $data, true);		$datas = array(			'rPop' => $txt,			'rPopTitle' => $data['titre'],			'rPopClass' => $class		);		echo json_encode($datas);	}	public function pass()	{		$post = $this->input->post('datas');		$data = array();		foreach($post as $k=>$v)		$data[$k] = $v;		$datas['password'] = md5($data['password']);		if($this->ClientsModel->updateData('client', $datas, array('id' => $data['id'])))		{			$infos = $this->ClientsModel->getData('client', array('id' => $data['id']));			$sujet = 'Votre mot de passe sur ' . APP_NAME;			$content = 'Voici votre nouveau mot de passe sur le site ' . APP_NAME . ' : ' . $data['password'];			$mess_datas = array(				'dest' => $infos->email,				'sujet' => $sujet,				'content' => $content			);			modules::run('message', json_encode($mess_datas));			$txt = 'Mise à jour effectuée avec succès';			$class = 'success';		}		else		{			$txt = 'Erreur lors de la mise à jour';			$class = 'alerte';		}		$vue = $this->load->view('/admin/form', $data, true);		$datas = array(			'rPop' => $txt,			'rPopTitle' => $data['titre'],			'rPopClass' => $class		);		echo json_encode($datas);	}}